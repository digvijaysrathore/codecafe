{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kvsra\\\\Desktop\\\\cafemod\\\\novacafe\\\\src\\\\components\\\\profiles\\\\projectDetails.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport '../../styles.css';\n\nconst PostDetails = props => {\n  const {\n    post,\n    auth\n  } = props;\n  console.log(post);\n  if (!auth.uid) return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 27\n    }\n  });\n\n  if (post) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container section post-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card z-depth-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 25\n      }\n    }, post.name, \" - \", post.intro), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }\n    }, post.description), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"purple-text\",\n      href: post.link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }\n    }, \"Visit \", post.name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: post.image,\n      height: \"30%\",\n      width: \"50%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-action grey lighten-4 grey-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    }, \"Made by \", post.authorName), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    }))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, \"Just a sec.. the post is on the way!\"));\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  //console.log(state);\n  const id = ownProps.match.params.id;\n  const posts = state.firestore.data.posts;\n  const post = posts ? posts[id] : null;\n  return {\n    post: post,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect([{\n  collection: 'posts'\n}]))(PostDetails);","map":{"version":3,"sources":["C:/Users/kvsra/Desktop/cafemod/novacafe/src/components/profiles/projectDetails.js"],"names":["React","connect","firestoreConnect","compose","Redirect","PostDetails","props","post","auth","console","log","uid","name","intro","description","link","image","authorName","mapStateToProps","state","ownProps","id","match","params","posts","firestore","data","firebase","collection"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport '../../styles.css';\r\n\r\nconst PostDetails = (props) => {\r\n    const {post, auth} = props\r\n    console.log(post)\r\n    if (!auth.uid) return <Redirect to=\"/login\" />\r\n    if (post) {\r\n        return (\r\n            <div className=\"container section post-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{ post.name } - {post.intro}</span>\r\n                        <p>{ post.description }</p>\r\n                        <a className=\"purple-text\" href={post.link}>Visit {post.name}</a>\r\n                    </div>\r\n                    <div className=\"center\">\r\n                    <img src={post.image} height=\"30%\" width=\"50%\"/>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Made by { post.authorName }</div>\r\n                        <div></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Just a sec.. the post is on the way!</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    //console.log(state);\r\n    const id = ownProps.match.params.id;\r\n    const posts = state.firestore.data.posts;\r\n    const post = posts ? posts[id] : null\r\n    return {\r\n        post: post,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n      { collection: 'posts' }\r\n    ])\r\n)(PostDetails);"]},"metadata":{},"sourceType":"module"}