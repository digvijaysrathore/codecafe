{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\kvsra\\\\Desktop\\\\cafemod\\\\novacafe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";export var signIn=function signIn(credentials){return function(dispatch,getState,_ref){var getFirebase=_ref.getFirebase;var firebase=getFirebase();firebase.auth().signInWithEmailAndPassword(credentials.email,credentials.password).then(function(){dispatch({type:'LOGIN_SUCCESS'});}).catch(function(err){dispatch({type:'LOGIN_ERROR',err:err});});};};export var signOut=function signOut(){return function(dispatch,getState,_ref2){var getFirebase=_ref2.getFirebase;var firebase=getFirebase();firebase.auth().signOut().then(function(){dispatch({type:'SIGNOUT_SUCCESS'});});};};export var signUp=function signUp(newUser){return function(dispatch,getState,_ref3){var getFirebase=_ref3.getFirebase,getFirestore=_ref3.getFirestore;var firebase=getFirebase();var firestore=getFirestore();var profile=getState().firebase.profile;var authorId=getState().firebase.auth.uid;firebase.auth().createUserWithEmailAndPassword(newUser.email,newUser.password).then(function(resp){return firestore.collection('users').doc(resp.user.uid).set(_objectSpread({},newUser,{name:newUser.name,title:newUser.title,stack:newUser.stack,instagram:newUser.insta,github:newUser.github,love:newUser.love,project:newUser.project,img:newUser.img,initials:newUser.name[0]+newUser.name[1]}));}).then(function(){dispatch({type:'SIGNUP_SUCCESS',newUser:newUser});}).catch(function(err){dispatch({type:'SIGNUP_ERROR',err:err});});};};","map":{"version":3,"sources":["C:/Users/kvsra/Desktop/cafemod/novacafe/src/store/actions/authActions.js"],"names":["signIn","credentials","dispatch","getState","getFirebase","firebase","auth","signInWithEmailAndPassword","email","password","then","type","catch","err","signOut","signUp","newUser","getFirestore","firestore","profile","authorId","uid","createUserWithEmailAndPassword","resp","collection","doc","user","set","name","title","stack","instagram","insta","github","love","project","img","initials"],"mappings":"uKAAA,MAAO,IAAMA,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,WAAD,CAAiB,CACnC,MAAO,UAACC,QAAD,CAAWC,QAAX,MAAuC,IAAjBC,CAAAA,WAAiB,MAAjBA,WAAiB,CAC1C,GAAMC,CAAAA,QAAQ,CAAGD,WAAW,EAA5B,CAEAC,QAAQ,CAACC,IAAT,GAAgBC,0BAAhB,CACIN,WAAW,CAACO,KADhB,CAEIP,WAAW,CAACQ,QAFhB,EAGEC,IAHF,CAGO,UAAM,CACTR,QAAQ,CAAC,CAACS,IAAI,CAAE,eAAP,CAAD,CAAR,CACH,CALD,EAKGC,KALH,CAKS,SAACC,GAAD,CAAS,CACdX,QAAQ,CAAC,CAACS,IAAI,CAAE,aAAP,CAAsBE,GAAG,CAAHA,GAAtB,CAAD,CAAR,CACH,CAPD,EAQH,CAXD,CAYH,CAbM,CAeP,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACzB,MAAO,UAACZ,QAAD,CAAWC,QAAX,OAAuC,IAAjBC,CAAAA,WAAiB,OAAjBA,WAAiB,CAC1C,GAAMC,CAAAA,QAAQ,CAAGD,WAAW,EAA5B,CAEAC,QAAQ,CAACC,IAAT,GAAgBQ,OAAhB,GAA0BJ,IAA1B,CAA+B,UAAM,CACjCR,QAAQ,CAAC,CAACS,IAAI,CAAE,iBAAP,CAAD,CAAR,CACH,CAFD,EAGH,CAND,CAOH,CARM,CAUP,MAAO,IAAMI,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,OAAD,CAAa,CAC/B,MAAO,UAACd,QAAD,CAAWC,QAAX,OAAqD,IAA/BC,CAAAA,WAA+B,OAA/BA,WAA+B,CAAlBa,YAAkB,OAAlBA,YAAkB,CACxD,GAAMZ,CAAAA,QAAQ,CAAGD,WAAW,EAA5B,CACA,GAAMc,CAAAA,SAAS,CAAGD,YAAY,EAA9B,CAEA,GAAME,CAAAA,OAAO,CAAGhB,QAAQ,GAAGE,QAAX,CAAoBc,OAApC,CACA,GAAMC,CAAAA,QAAQ,CAAGjB,QAAQ,GAAGE,QAAX,CAAoBC,IAApB,CAAyBe,GAA1C,CAEAhB,QAAQ,CAACC,IAAT,GAAgBgB,8BAAhB,CACIN,OAAO,CAACR,KADZ,CAEIQ,OAAO,CAACP,QAFZ,EAGEC,IAHF,CAGO,SAACa,IAAD,CAAU,CACb,MAAOL,CAAAA,SAAS,CAACM,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkCF,IAAI,CAACG,IAAL,CAAUL,GAA5C,EAAiDM,GAAjD,kBACAX,OADA,EAEHY,IAAI,CAAEZ,OAAO,CAACY,IAFX,CAGHC,KAAK,CAAEb,OAAO,CAACa,KAHZ,CAIHC,KAAK,CAAEd,OAAO,CAACc,KAJZ,CAKHC,SAAS,CAAEf,OAAO,CAACgB,KALhB,CAMHC,MAAM,CAAEjB,OAAO,CAACiB,MANb,CAOHC,IAAI,CAAElB,OAAO,CAACkB,IAPX,CAQHC,OAAO,CAAEnB,OAAO,CAACmB,OARd,CASHC,GAAG,CAAEpB,OAAO,CAACoB,GATV,CAUHC,QAAQ,CAAErB,OAAO,CAACY,IAAR,CAAa,CAAb,EAAkBZ,OAAO,CAACY,IAAR,CAAa,CAAb,CAVzB,GAAP,CAYH,CAhBD,EAgBGlB,IAhBH,CAgBQ,UAAM,CACVR,QAAQ,CAAC,CAACS,IAAI,CAAE,gBAAP,CAAyBK,OAAO,CAAPA,OAAzB,CAAD,CAAR,CACH,CAlBD,EAkBGJ,KAlBH,CAkBS,SAAAC,GAAG,CAAI,CACZX,QAAQ,CAAC,CAACS,IAAI,CAAE,cAAP,CAAuBE,GAAG,CAAHA,GAAvB,CAAD,CAAR,CACH,CApBD,EAqBH,CA5BD,CA6BH,CA9BM","sourcesContent":["export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'});\r\n        }).catch((err) => {\r\n            dispatch({type: 'LOGIN_ERROR', err});\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({type: 'SIGNOUT_SUCCESS'});\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                ...newUser,\r\n                name: newUser.name,\r\n                title: newUser.title,\r\n                stack: newUser.stack,\r\n                instagram: newUser.insta,\r\n                github: newUser.github,\r\n                love: newUser.love,\r\n                project: newUser.project,\r\n                img: newUser.img,\r\n                initials: newUser.name[0] + newUser.name[1]\r\n            })\r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS', newUser})\r\n        }).catch(err => {\r\n            dispatch({type: 'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}