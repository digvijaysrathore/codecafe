{"ast":null,"code":"export const signIn = credentials => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signInWithEmailAndPassword(credentials.email, credentials.password).then(() => {\n      dispatch({\n        type: 'LOGIN_SUCCESS'\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'LOGIN_ERROR',\n        err\n      });\n    });\n  };\n};\nexport const signOut = () => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n    firebase.auth().signOut().then(() => {\n      dispatch({\n        type: 'SIGNOUT_SUCCESS'\n      });\n    });\n  };\n};\nexport const signUp = newUser => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password).then(resp => {\n      return firestore.collection('users').doc(resp.user.uid).set({ ...newUser,\n        name: newUser.name,\n        title: newUser.title,\n        stack: newUser.stack,\n        instagram: newUser.insta,\n        github: newUser.github,\n        love: newUser.love,\n        project: newUser.project,\n        img: newUser.img,\n        initials: newUser.name[0] + newUser.name[1]\n      });\n    }).then(() => {\n      dispatch({\n        type: 'SIGNUP_SUCCESS',\n        newUser\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'SIGNUP_ERROR',\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/kvsra/Desktop/cafemod/novacafe/src/store/actions/authActions.js"],"names":["signIn","credentials","dispatch","getState","getFirebase","firebase","auth","signInWithEmailAndPassword","email","password","then","type","catch","err","signOut","signUp","newUser","getFirestore","firestore","profile","authorId","uid","createUserWithEmailAndPassword","resp","collection","doc","user","set","name","title","stack","instagram","insta","github","love","project","img","initials"],"mappings":"AAAA,OAAO,MAAMA,MAAM,GAAIC,WAAD,IAAiB;AACnC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA;AAAD,GAArB,KAAuC;AAC1C,UAAMC,QAAQ,GAAGD,WAAW,EAA5B;AAEAC,IAAAA,QAAQ,CAACC,IAAT,GAAgBC,0BAAhB,CACIN,WAAW,CAACO,KADhB,EAEIP,WAAW,CAACQ,QAFhB,EAGEC,IAHF,CAGO,MAAM;AACTR,MAAAA,QAAQ,CAAC;AAACS,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACH,KALD,EAKGC,KALH,CAKUC,GAAD,IAAS;AACdX,MAAAA,QAAQ,CAAC;AAACS,QAAAA,IAAI,EAAE,aAAP;AAAsBE,QAAAA;AAAtB,OAAD,CAAR;AACH,KAPD;AAQH,GAXD;AAYH,CAbM;AAeP,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB,SAAO,CAACZ,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA;AAAD,GAArB,KAAuC;AAC1C,UAAMC,QAAQ,GAAGD,WAAW,EAA5B;AAEAC,IAAAA,QAAQ,CAACC,IAAT,GAAgBQ,OAAhB,GAA0BJ,IAA1B,CAA+B,MAAM;AACjCR,MAAAA,QAAQ,CAAC;AAACS,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AACH,KAFD;AAGH,GAND;AAOH,CARM;AAUP,OAAO,MAAMI,MAAM,GAAIC,OAAD,IAAa;AAC/B,SAAO,CAACd,QAAD,EAAWC,QAAX,EAAqB;AAACC,IAAAA,WAAD;AAAca,IAAAA;AAAd,GAArB,KAAqD;AACxD,UAAMZ,QAAQ,GAAGD,WAAW,EAA5B;AACA,UAAMc,SAAS,GAAGD,YAAY,EAA9B;AAEA,UAAME,OAAO,GAAGhB,QAAQ,GAAGE,QAAX,CAAoBc,OAApC;AACA,UAAMC,QAAQ,GAAGjB,QAAQ,GAAGE,QAAX,CAAoBC,IAApB,CAAyBe,GAA1C;AAEAhB,IAAAA,QAAQ,CAACC,IAAT,GAAgBgB,8BAAhB,CACIN,OAAO,CAACR,KADZ,EAEIQ,OAAO,CAACP,QAFZ,EAGEC,IAHF,CAGQa,IAAD,IAAU;AACb,aAAOL,SAAS,CAACM,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkCF,IAAI,CAACG,IAAL,CAAUL,GAA5C,EAAiDM,GAAjD,CAAqD,EACxD,GAAGX,OADqD;AAExDY,QAAAA,IAAI,EAAEZ,OAAO,CAACY,IAF0C;AAGxDC,QAAAA,KAAK,EAAEb,OAAO,CAACa,KAHyC;AAIxDC,QAAAA,KAAK,EAAEd,OAAO,CAACc,KAJyC;AAKxDC,QAAAA,SAAS,EAAEf,OAAO,CAACgB,KALqC;AAMxDC,QAAAA,MAAM,EAAEjB,OAAO,CAACiB,MANwC;AAOxDC,QAAAA,IAAI,EAAElB,OAAO,CAACkB,IAP0C;AAQxDC,QAAAA,OAAO,EAAEnB,OAAO,CAACmB,OARuC;AASxDC,QAAAA,GAAG,EAAEpB,OAAO,CAACoB,GAT2C;AAUxDC,QAAAA,QAAQ,EAAErB,OAAO,CAACY,IAAR,CAAa,CAAb,IAAkBZ,OAAO,CAACY,IAAR,CAAa,CAAb;AAV4B,OAArD,CAAP;AAYH,KAhBD,EAgBGlB,IAhBH,CAgBQ,MAAM;AACVR,MAAAA,QAAQ,CAAC;AAACS,QAAAA,IAAI,EAAE,gBAAP;AAAyBK,QAAAA;AAAzB,OAAD,CAAR;AACH,KAlBD,EAkBGJ,KAlBH,CAkBSC,GAAG,IAAI;AACZX,MAAAA,QAAQ,CAAC;AAACS,QAAAA,IAAI,EAAE,cAAP;AAAuBE,QAAAA;AAAvB,OAAD,CAAR;AACH,KApBD;AAqBH,GA5BD;AA6BH,CA9BM","sourcesContent":["export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'});\r\n        }).catch((err) => {\r\n            dispatch({type: 'LOGIN_ERROR', err});\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({type: 'SIGNOUT_SUCCESS'});\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                ...newUser,\r\n                name: newUser.name,\r\n                title: newUser.title,\r\n                stack: newUser.stack,\r\n                instagram: newUser.insta,\r\n                github: newUser.github,\r\n                love: newUser.love,\r\n                project: newUser.project,\r\n                img: newUser.img,\r\n                initials: newUser.name[0] + newUser.name[1]\r\n            })\r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS', newUser})\r\n        }).catch(err => {\r\n            dispatch({type: 'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}